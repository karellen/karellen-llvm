name: Build Core Packages
on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
jobs:
  build-primary:
    runs-on: self-hosted
    timeout-minutes: 1380
    continue-on-error: false
    env:
      TWINE_USERNAME: __token__
      TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      SEGMENT_DOWNLOAD_TIMEOUT_MINS: 60
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Install Twine
        shell: bash
        run: |
          set -eEux
          set -o pipefail

          echo "$HOME/.local/bin" >> $GITHUB_PATH
          PATH=$HOME/.local/bin:$PATH
          export PATH
          pip install --no-input --user --break-system-packages twine
          twine --version

      - name: Build
        shell: bash
        run: |
          set -eEux
          set -o pipefail

          for p in patches/*; do
            patch -d llvm-project -p1 < $p
          done

          ./docker-build.py -m build

      - name: Test
        shell: bash
        run: |
          set -eEux
          set -o pipefail

          twine check --strict wheels/*.whl
          ls -la wheels/*

      - name: Upload Releases
        shell: bash
        if: github.ref_name == 'master'
        run: |
          set -eEux
          set -o pipefail

          gh release create v$(./version_extractor.py -d llvm-project -m python) --generate-notes wheels/*.whl
          ./sync-submodule-tags.sh

          while ! twine upload --non-interactive --skip-existing wheels/*.whl; do
              sleep 5
          done
