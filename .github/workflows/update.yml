name: karellen-llvm-update
on:
  schedule:
    - cron: "0 */6 * * *"
  workflow_dispatch:
jobs:
  check-update:
    runs-on: self-hosted
    timeout-minutes: 600
    continue-on-error: false
    env:
      GH_TOKEN: ${{ secrets.PAT_TOKEN }}
      SEGMENT_DOWNLOAD_TIMEOUT_MINS: 60
    steps:
      - name: Ensure only single auto-update branch
        shell: bash
        run: |
          set -eEux
          set -o pipefail
          shopt -s extglob

          CURRENT_BRANCH="$(git ls-remote $GITHUB_SERVER_URL/$GITHUB_REPOSITORY 'auto-update-*' 2>/dev/null | { grep -o 'refs/heads/auto-update-.*' || true; } | sed 's/refs\/heads\///')"
          if [ -n "$CURRENT_BRANCH" ] ; then
            echo "# Pending auto-update branch $CURRENT_BRANCH already exists!" >> $GITHUB_STEP_SUMMARY
            gh run cancel ${{ github.run_id }}
            sleep 10
          fi

      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Check Updates
        shell: bash
        run: |
          set -eEux
          set -o pipefail
          shopt -s extglob

          CURRENT_VERSION="$(./version_extractor.py -m python -d llvm-project)"
          git submodule update --init --remote --recursive
          NEW_VERSION="$(./version_extractor.py -m python -d llvm-project)"

          if [ "$CURRENT_VERSION" != "$NEW_VERSION" ]; then
              echo "# Current version: $CURRENT_VERSION" >> $GITHUB_STEP_SUMMARY
              echo "# New version: $NEW_VERSION" >> $GITHUB_STEP_SUMMARY

              BRANCH_NAME="auto-update-${CURRENT_VERSION}-${NEW_VERSION}"
              TITLE="Automatic update from $CURRENT_VERSION to $NEW_VERSION"

              git config --global user.email "supervisor@karellen.co"
              git config --global user.name "Karellen Supervisor"

              git checkout -b "$BRANCH_NAME"
              git commit -a -m "$TITLE"
              git push --set-upstream origin "$BRANCH_NAME"

              PR_URL="$(gh pr create --head "$BRANCH_NAME" --base master --fill --no-maintainer-edit)"
              gh pr merge --merge --auto -d "$PR_URL"
          fi
